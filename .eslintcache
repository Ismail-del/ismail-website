[{"D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\index.js":"1","D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\registerServiceWorker.js":"2","D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\App.js":"3","D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\Header.js":"4","D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\Resume.js":"5","D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\About.js":"6","D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\Footer.js":"7","D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\Contact.js":"8","D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\Testimonials.js":"9","D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\Portfolio.js":"10","D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\hooks\\use-input.js":"11","D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\hooks\\use-validation.js":"12"},{"size":262,"mtime":1634974183155,"results":"13","hashOfConfig":"14"},{"size":4129,"mtime":1634974183156,"results":"15","hashOfConfig":"14"},{"size":1035,"mtime":1634974183151,"results":"16","hashOfConfig":"14"},{"size":2327,"mtime":1635427001043,"results":"17","hashOfConfig":"14"},{"size":2288,"mtime":1634974183154,"results":"18","hashOfConfig":"14"},{"size":1689,"mtime":1642679793345,"results":"19","hashOfConfig":"14"},{"size":994,"mtime":1642764850693,"results":"20","hashOfConfig":"14"},{"size":8141,"mtime":1642966796542,"results":"21","hashOfConfig":"14"},{"size":876,"mtime":1634974183154,"results":"22","hashOfConfig":"14"},{"size":1300,"mtime":1642678840827,"results":"23","hashOfConfig":"14"},{"size":1292,"mtime":1642967182403,"results":"24","hashOfConfig":"14"},{"size":359,"mtime":1642957397985,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"9t55n9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\index.js",[],["52","53"],"D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\registerServiceWorker.js",[],"D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\App.js",[],"D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\Header.js",[],"D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\Resume.js",[],"D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\About.js",[],"D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\Footer.js",[],"D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\Contact.js",["54","55","56","57"],"// import React, { useState } from 'react';\r\nimport './contact.css';\r\n// import emailjs from 'emailjs-com';\r\nimport useInput from './hooks/use-input';\r\nimport useValidation from './hooks/use-validation';\r\n\r\nconst Contact = ({ data }) => {\r\n  // const [name, setName] = useState('');\r\n\r\n  // const [nameValidation, setNameValidation] = useState(true);\r\n\r\n  // const [emailValidation, setValidation] = useState(true);\r\n  // const [subject, setSubject] = useState('');\r\n  // const [message, setMessage] = useState('');\r\n  // const [messageValidation, setMessageValidation] = useState(true);\r\n  const {\r\n    value: entredName,\r\n    isValidValue: isValidName,\r\n    hasError: hasErrorName,\r\n    formValidation: validationFormName,\r\n    entredValueHandler: entredNameHandler,\r\n    onBlurHandler: onBlurNameHandler,\r\n    resetValue: resetName,\r\n  } = useInput((e) => e.trim() === '');\r\n  const validateEmail = (email) => {\r\n    let emailValue = String(email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n    if (emailValue !== null) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const {\r\n    value: entredEmail,\r\n    hasError: hasErrorEmail,\r\n    isValidValue: isValidEmail,\r\n    entredValueHandler: entredEmailHandler,\r\n    onBlurHandler: onBlurEmailHandler,\r\n    resetValue: resetEmail,\r\n  } = useInput(validateEmail);\r\n  const {\r\n    value: entredMessage,\r\n    hasError: hasErrorMessage,\r\n    isValidValue: isValidMessage,\r\n    entredValueHandler: entredMessageHandler,\r\n    onBlurHandler: onBlurMessageHandler,\r\n    resetValue: resetMessage,\r\n  } = useInput((e) => e.trim() === '');\r\n\r\n  const {\r\n    value: entredSubject,\r\n    hasError: hasErrorSubject,\r\n    isValidValue: isValidSubject,\r\n    entredValueHandler: entredSubjectHandler,\r\n    onBlurHandler: onBlurSubjectHandler,\r\n    resetValue: resetSubject,\r\n  } = useInput((e) => e.trim() === '');\r\n\r\n  // console.log('hasErrorName', hasErrorName);\r\n  const { cssClassValidity: subjectClassValidity, phrase: subjectPhrase } =\r\n    useValidation(hasErrorSubject, 'subject');\r\n\r\n  const { cssClassValidity: messageClassValidity, phrase: messagePhrase } =\r\n    useValidation(hasErrorMessage, 'message');\r\n\r\n  const { cssClassValidity: nameClassValidity, phrase: namePhrase } =\r\n    useValidation(hasErrorName, 'name', isValidName);\r\n\r\n  const { cssClassValidity: emailClassValidity, phrase: emailPhrase } =\r\n    useValidation(hasErrorEmail, 'email');\r\n\r\n  if (data) {\r\n    var contactName = data.name;\r\n    var street = data.address.street;\r\n    var city = data.address.city;\r\n    var state = data.address.state;\r\n    var zip = data.address.zip;\r\n    var phone = data.phone;\r\n    var contactEmail = data.email;\r\n    var contactMessage = data.contactmessage;\r\n  }\r\n  const cssClassForm = validationFormName ? 'noValidation' : 'validationForm';\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    // if (isValidName && !hasErrorName) {\r\n    //   console.log('form not valid');\r\n    //   setformPhrase('validationForm');\r\n    //   console.log('formPhrase= ', formPhrase);\r\n    //   return;\r\n    // }\r\n    console.log('cssClassForm = ', cssClassForm);\r\n\r\n    // console.log(\"e = \", e)\r\n    // console.log(e.target);\r\n    // if (name.trim() === '') {\r\n    //   setNameValidation(false);\r\n    //   return;\r\n    // }\r\n    // console.log('entredName = ', entredName);\r\n    // console.log('hasErrorName = ', hasErrorName);\r\n    resetName();\r\n    resetEmail();\r\n    resetMessage();\r\n    resetSubject();\r\n    // setName('');\r\n    // emailjs.sendForm('service_fdkdvoa', 'template_d1rtudg', e.target, 'user_G66Veun6vUyyu3j8jGtGB')\r\n    //   .then(res => {\r\n    //     console.log(res)\r\n    //   }).catch(err => console.log(err));\r\n    // window.open(\r\n    //   `mailto:${contactEmail}?subject=${encodeURIComponent(\r\n    //     subject\r\n    //   )}&body=${encodeURIComponent(name)} (${encodeURIComponent(\r\n    //     email\r\n    //   )}): ${encodeURIComponent(message)}`\r\n    // );\r\n  };\r\n  // const onChangeNameHandler = (e) => {\r\n  //   setName(e.target.value);\r\n  //   setNameValidation(true);\r\n  // };\r\n\r\n  return (\r\n    <section id=\"contact\">\r\n      <div className=\"row section-head\">\r\n        <div className=\"two columns header-col\">\r\n          <h1>\r\n            <span>Get In Touch.</span>\r\n          </h1>\r\n        </div>\r\n\r\n        <div className=\"ten columns\">\r\n          <p className=\"lead\">{contactMessage}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"eight columns\">\r\n          <form onSubmit={submitForm}>\r\n            <fieldset>\r\n              {hasErrorName && namePhrase}\r\n              <div>\r\n                <label htmlFor=\"contactName\">\r\n                  Name <span className=\"required\">*</span>\r\n                </label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  defaultValue=\"\"\r\n                  value={entredName}\r\n                  size=\"35\"\r\n                  id=\"contactName\"\r\n                  name=\"contactName\"\r\n                  className={cssClassForm}\r\n                  onChange={entredNameHandler}\r\n                  onBlur={onBlurNameHandler}\r\n                />\r\n              </div>\r\n              {hasErrorEmail && emailPhrase}\r\n              <div>\r\n                <label htmlFor=\"contactEmail\">\r\n                  Email <span className=\"required\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  defaultValue=\"\"\r\n                  value={entredEmail}\r\n                  size=\"35\"\r\n                  // id=\"contactEmail\"\r\n                  className={emailClassValidity}\r\n                  name=\"contactEmail\"\r\n                  onBlur={onBlurEmailHandler}\r\n                  onChange={entredEmailHandler}\r\n                />\r\n              </div>\r\n              {hasErrorSubject && subjectPhrase}\r\n              <div>\r\n                <label htmlFor=\"contactSubject\">Subject</label>\r\n                <input\r\n                  type=\"text\"\r\n                  defaultValue=\"\"\r\n                  value={entredSubject}\r\n                  size=\"35\"\r\n                  id=\"contactSubject\"\r\n                  name=\"contactSubject\"\r\n                  onBlur={onBlurSubjectHandler}\r\n                  className={subjectClassValidity}\r\n                  onChange={entredSubjectHandler}\r\n                />\r\n              </div>\r\n              {hasErrorMessage && messagePhrase}\r\n              <div>\r\n                <label htmlFor=\"contactMessage\">\r\n                  Message <span className=\"required\">*</span>\r\n                </label>\r\n                <textarea\r\n                  cols=\"50\"\r\n                  rows=\"15\"\r\n                  value={entredMessage}\r\n                  onChange={entredMessageHandler}\r\n                  onBlur={onBlurMessageHandler}\r\n                  className={messageClassValidity}\r\n                  // id=\"contactMessage\"\r\n                  name=\"contactMessage\"\r\n                ></textarea>\r\n              </div>\r\n\r\n              <div>\r\n                <button type=\"submit\" className=\"submit\">\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </fieldset>\r\n          </form>\r\n\r\n          <div id=\"message-warning\"> Error boy</div>\r\n          <div id=\"message-success\">\r\n            <i className=\"fa fa-check\"></i>Your message was sent, thank you!\r\n            <br />\r\n          </div>\r\n        </div>\r\n\r\n        <aside className=\"four columns footer-widgets\">\r\n          <div className=\"widget widget_contact\">\r\n            <h4>Address and Phone</h4>\r\n            <p className=\"address\">\r\n              {contactName}\r\n              <br />\r\n              {contactEmail}\r\n              <br />\r\n              <br />\r\n              {street} <br />\r\n              {city}, {state} {zip}\r\n              <br />\r\n              <span>{phone}</span>\r\n            </p>\r\n          </div>\r\n        </aside>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\Testimonials.js",[],"D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\Portfolio.js",[],"D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\hooks\\use-input.js",[],"D:\\IsmailProject\\Resume-Portfolio-Starter-pack\\src\\Components\\hooks\\use-validation.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":41,"column":19,"nodeType":"64","messageId":"65","endLine":41,"endColumn":31},{"ruleId":"62","severity":1,"message":"66","line":49,"column":19,"nodeType":"64","messageId":"65","endLine":49,"endColumn":33},{"ruleId":"62","severity":1,"message":"67","line":58,"column":19,"nodeType":"64","messageId":"65","endLine":58,"endColumn":33},{"ruleId":"62","severity":1,"message":"68","line":71,"column":29,"nodeType":"64","messageId":"65","endLine":71,"endColumn":46},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'isValidEmail' is assigned a value but never used.","Identifier","unusedVar","'isValidMessage' is assigned a value but never used.","'isValidSubject' is assigned a value but never used.","'nameClassValidity' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]